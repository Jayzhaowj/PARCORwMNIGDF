// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// pred_dens_mix_approx
arma::vec pred_dens_mix_approx(arma::vec x_test, arma::vec y_test, arma::mat theta_sr, arma::mat beta_mean, arma::vec sig2_samp, bool sv, arma::vec sv_phi, arma::vec sv_mu, arma::vec sv_sigma2, arma::cube chol_C_N_inv_samp, arma::cube m_N_samp, int M, bool log);
RcppExport SEXP _PARCORwMNIGDF_pred_dens_mix_approx(SEXP x_testSEXP, SEXP y_testSEXP, SEXP theta_srSEXP, SEXP beta_meanSEXP, SEXP sig2_sampSEXP, SEXP svSEXP, SEXP sv_phiSEXP, SEXP sv_muSEXP, SEXP sv_sigma2SEXP, SEXP chol_C_N_inv_sampSEXP, SEXP m_N_sampSEXP, SEXP MSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x_test(x_testSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y_test(y_testSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta_sr(theta_srSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_mean(beta_meanSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sig2_samp(sig2_sampSEXP);
    Rcpp::traits::input_parameter< bool >::type sv(svSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sv_phi(sv_phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sv_mu(sv_muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sv_sigma2(sv_sigma2SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type chol_C_N_inv_samp(chol_C_N_inv_sampSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type m_N_samp(m_N_sampSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_dens_mix_approx(x_test, y_test, theta_sr, beta_mean, sig2_samp, sv, sv_phi, sv_mu, sv_sigma2, chol_C_N_inv_samp, m_N_samp, M, log));
    return rcpp_result_gen;
END_RCPP
}
// do_shrinkTVP_mNIG
List do_shrinkTVP_mNIG(arma::vec y, arma::mat x, arma::vec a0, int K, int niter, int nburn, int nthin, double c0, double g0, double G0, double eta2_d1, double eta2_d2, double p_d1, double p_d2, double par_c, bool display_progress, bool ret_beta_nc, bool store_burn, bool sv, double Bsigma_sv, double a0_sv, double b0_sv, double bmu, double Bmu, bool SAVS, arma::vec delta);
RcppExport SEXP _PARCORwMNIGDF_do_shrinkTVP_mNIG(SEXP ySEXP, SEXP xSEXP, SEXP a0SEXP, SEXP KSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP c0SEXP, SEXP g0SEXP, SEXP G0SEXP, SEXP eta2_d1SEXP, SEXP eta2_d2SEXP, SEXP p_d1SEXP, SEXP p_d2SEXP, SEXP par_cSEXP, SEXP display_progressSEXP, SEXP ret_beta_ncSEXP, SEXP store_burnSEXP, SEXP svSEXP, SEXP Bsigma_svSEXP, SEXP a0_svSEXP, SEXP b0_svSEXP, SEXP bmuSEXP, SEXP BmuSEXP, SEXP SAVSSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< double >::type c0(c0SEXP);
    Rcpp::traits::input_parameter< double >::type g0(g0SEXP);
    Rcpp::traits::input_parameter< double >::type G0(G0SEXP);
    Rcpp::traits::input_parameter< double >::type eta2_d1(eta2_d1SEXP);
    Rcpp::traits::input_parameter< double >::type eta2_d2(eta2_d2SEXP);
    Rcpp::traits::input_parameter< double >::type p_d1(p_d1SEXP);
    Rcpp::traits::input_parameter< double >::type p_d2(p_d2SEXP);
    Rcpp::traits::input_parameter< double >::type par_c(par_cSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    Rcpp::traits::input_parameter< bool >::type ret_beta_nc(ret_beta_ncSEXP);
    Rcpp::traits::input_parameter< bool >::type store_burn(store_burnSEXP);
    Rcpp::traits::input_parameter< bool >::type sv(svSEXP);
    Rcpp::traits::input_parameter< double >::type Bsigma_sv(Bsigma_svSEXP);
    Rcpp::traits::input_parameter< double >::type a0_sv(a0_svSEXP);
    Rcpp::traits::input_parameter< double >::type b0_sv(b0_svSEXP);
    Rcpp::traits::input_parameter< double >::type bmu(bmuSEXP);
    Rcpp::traits::input_parameter< double >::type Bmu(BmuSEXP);
    Rcpp::traits::input_parameter< bool >::type SAVS(SAVSSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(do_shrinkTVP_mNIG(y, x, a0, K, niter, nburn, nthin, c0, g0, G0, eta2_d1, eta2_d2, p_d1, p_d2, par_c, display_progress, ret_beta_nc, store_burn, sv, Bsigma_sv, a0_sv, b0_sv, bmu, Bmu, SAVS, delta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PARCORwMNIGDF_pred_dens_mix_approx", (DL_FUNC) &_PARCORwMNIGDF_pred_dens_mix_approx, 13},
    {"_PARCORwMNIGDF_do_shrinkTVP_mNIG", (DL_FUNC) &_PARCORwMNIGDF_do_shrinkTVP_mNIG, 26},
    {NULL, NULL, 0}
};

RcppExport void R_init_PARCORwMNIGDF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
